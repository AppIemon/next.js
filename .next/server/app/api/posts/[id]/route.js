(()=>{var e={};e.id=619,e.ids=[619],e.modules={12518:e=>{"use strict";e.exports=require("mongodb")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},36347:(e,s,t)=>{"use strict";t.r(s),t.d(s,{patchFetch:()=>R,routeModule:()=>x,serverHooks:()=>j,workAsyncStorage:()=>w,workUnitAsyncStorage:()=>f});var r={};t.r(r),t.d(r,{DELETE:()=>l,GET:()=>m,POST:()=>g,PUT:()=>p});var o=t(42706),n=t(28203),a=t(45994),i=t(52445),u=t(12518),c=t(39187),d=t(35189);async function p(e,{params:s}){try{let t=await (0,d.V)(e);if(!t.isValid)return c.NextResponse.json({success:!1,message:"인증이 필요합니다"},{status:401});let{title:r,content:o}=await e.json();if(!r?.trim()||!o?.trim())return c.NextResponse.json({success:!1,message:"제목과 내용을 모두 입력해주세요"},{status:400});let n=(await i.X).db("forum"),a=await n.collection("posts").findOne({_id:new u.ObjectId(s.id)});if(!a)return c.NextResponse.json({success:!1,message:"게시글을 찾을 수 없습니다"},{status:404});if(a.author!==t.user.nickname)return c.NextResponse.json({success:!1,message:"수정 권한이 없습니다"},{status:403});let p=await n.collection("posts").updateOne({_id:new u.ObjectId(s.id)},{$set:{title:r.trim(),content:o.trim(),updatedAt:new Date}});if(0===p.matchedCount)return c.NextResponse.json({success:!1,message:"게시글을 찾을 수 없습니다"},{status:404});return c.NextResponse.json({success:!0,message:"게시글이 수정되었습니다"})}catch(e){return console.error("Update post error:",e),c.NextResponse.json({success:!1,message:"서버 오류가 발생했습니다"},{status:500})}}async function l(e,{params:s}){try{let t;let r=await validateSession(e);if(!r?.username)return c.NextResponse.json({success:!1,message:"로그인이 필요합니다"},{status:401});if(!s.id)return c.NextResponse.json({success:!1,message:"게시글 ID가 필요합니다"},{status:400});let o=(await i.X).db("forum");try{t=await o.collection("posts").findOne({_id:new u.ObjectId(s.id)})}catch(e){return c.NextResponse.json({success:!1,message:"잘못된 게시글 ID입니다"},{status:400})}if(!t)return c.NextResponse.json({success:!1,message:"게시글을 찾을 수 없습니다"},{status:404});if(t.author?.username!==r.username)return c.NextResponse.json({success:!1,message:"삭제 권한이 없습니다"},{status:403});return await o.collection("files").deleteMany({postId:s.id}),await o.collection("posts").deleteOne({_id:new u.ObjectId(s.id)}),await o.collection("comments").deleteMany({postId:s.id}),c.NextResponse.json({success:!0,message:"게시글이 삭제되었습니다"})}catch(e){return console.error("Delete post error:",e),c.NextResponse.json({success:!1,message:"서버 오류가 발생했습니다"},{status:500})}}async function m(e,{params:s}){try{let e=(await i.X).db("forum"),t=await e.collection("posts").findOne({_id:new u.ObjectId(s.id)});if(!t)return c.NextResponse.json({success:!1,message:"게시글을 찾을 수 없습니다"},{status:404});return c.NextResponse.json(t)}catch(e){return console.error("Fetch post error:",{error:e.message,postId:s.id,requestMethod:"GET",stack:e.stack}),c.NextResponse.json({success:!1,message:"서버 오류가 발생했습니다",debug:{errorMessage:e.message,postId:s.id,endpoint:"/api/posts/[id]",method:"GET",timestamp:new Date().toISOString()}},{status:500})}}async function g(e,{params:s}){try{let e=(await i.X).db("forum"),t=await e.collection("posts").updateOne({_id:new u.ObjectId(s.id)},{$inc:{views:1}});if(0===t.modifiedCount)return c.NextResponse.json({success:!1,message:"조회수 업데이트 실패"},{status:500});return c.NextResponse.json({success:!0,message:"조회수가 업데이트되었습니다"})}catch(e){return console.error("Update views error:",{error:e.message,postId:s.id,requestMethod:"POST",stack:e.stack}),c.NextResponse.json({success:!1,message:"서버 오류가 발생했습니다",debug:{errorMessage:e.message,postId:s.id,endpoint:"/api/posts/[id]/view",method:"POST",timestamp:new Date().toISOString()}},{status:500})}}let x=new o.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/posts/[id]/route",pathname:"/api/posts/[id]",filename:"route",bundlePath:"app/api/posts/[id]/route"},resolvedPagePath:"C:\\코딩\\p5\\forum\\app\\api\\posts\\[id]\\route.js",nextConfigOutput:"",userland:r}),{workAsyncStorage:w,workUnitAsyncStorage:f,serverHooks:j}=x;function R(){return(0,a.patchFetch)({workAsyncStorage:w,workUnitAsyncStorage:f})}},96487:()=>{},78335:()=>{},35189:(e,s,t)=>{"use strict";async function r(e){var s;let t=(s=e.headers.get("Authorization"))?s.startsWith("Bearer ")?s.substring(7):s:null;if(!t)return{isValid:!1,message:"로그인이 필요합니다"};try{let e=decodeURIComponent(escape(atob(t))),s=JSON.parse(e);if(s.expires<Date.now())return{isValid:!1,message:"세션이 만료되었습니다"};return{isValid:!0,user:s}}catch(e){return console.error("Auth validation error:",e),{isValid:!1,message:"유효하지 않은 인증 정보입니다"}}}t.d(s,{V:()=>r})},52445:(e,s,t)=>{"use strict";t.d(s,{X:()=>n});var r=t(12518);let o=process.env.MONGODB_URI;if(!process.env.MONGODB_URI)throw Error("Please add your Mongo URI to .env.local");let n=new r.MongoClient(o,{}).connect()}};var s=require("../../../../webpack-runtime.js");s.C(e);var t=e=>s(s.s=e),r=s.X(0,[638,5452],()=>t(36347));module.exports=r})();