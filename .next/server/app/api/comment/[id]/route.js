(()=>{var e={};e.id=6745,e.ids=[6745],e.modules={12518:e=>{"use strict";e.exports=require("mongodb")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},6259:(e,s,t)=>{"use strict";t.r(s),t.d(s,{patchFetch:()=>j,routeModule:()=>l,serverHooks:()=>w,workAsyncStorage:()=>g,workUnitAsyncStorage:()=>x});var r={};t.r(r),t.d(r,{DELETE:()=>p,PUT:()=>m});var n=t(42706),a=t(28203),o=t(45994),i=t(52445),c=t(12518),d=t(39187),u=t(35189);async function m(e,{params:s}){try{let t=await (0,u.V)(e);if(!t.isValid)return d.NextResponse.json({success:!1,message:t.message},{status:401});let{text:r}=await e.json();if(!r?.trim())return d.NextResponse.json({success:!1,message:"댓글 내용을 입력해주세요"},{status:400});let n=(await i.X).db("forum"),a=await n.collection("comments").findOne({_id:new c.ObjectId(s.id)});if(!a)return d.NextResponse.json({success:!1,message:"댓글을 찾을 수 없습니다"},{status:404});if(a.author?.username!==t.user.username)return d.NextResponse.json({success:!1,message:"수정 권한이 없습니다"},{status:403});return await n.collection("comments").updateOne({_id:new c.ObjectId(s.id)},{$set:{text:r.trim(),updatedAt:new Date,isEdited:!0}}),d.NextResponse.json({success:!0,message:"댓글이 수정되었습니다"})}catch(e){return console.error("Update comment error:",{error:e.message,commentId:s.id,requestMethod:"PUT",validation:validation||"Not available",stack:e.stack}),d.NextResponse.json({success:!1,message:"서버 오류가 발생했습니다",debug:{errorMessage:e.message,commentId:s.id,endpoint:"/api/comment/[id]",method:"PUT",timestamp:new Date().toISOString()}},{status:500})}}async function p(e,{params:s}){try{let t=await (0,u.V)(e);if(!t.isValid)return d.NextResponse.json({success:!1,message:t.message},{status:401});let r=(await i.X).db("forum"),n=await r.collection("comments").findOne({_id:new c.ObjectId(s.id)});if(!n)return d.NextResponse.json({success:!1,message:"댓글을 찾을 수 없습니다"},{status:404});if(n.author?.username!==t.user.username)return d.NextResponse.json({success:!1,message:"삭제 권한이 없습니다"},{status:403});return n.parentId?await r.collection("comments").deleteOne({_id:new c.ObjectId(s.id)}):await r.collection("comments").deleteMany({$or:[{_id:new c.ObjectId(s.id)},{parentId:s.id}]}),d.NextResponse.json({success:!0,message:"댓글이 삭제되었습니다"})}catch(e){if(console.error("Delete comment error:",{error:e.message,commentId:s.id,requestMethod:"DELETE",validation:validation||"Not available",stack:e.stack}),e.message.includes("ObjectId"))return d.NextResponse.json({success:!1,message:"잘못된 댓글 ID입니다",debug:{errorMessage:e.message,commentId:s.id,endpoint:"/api/comment/[id]",method:"DELETE",timestamp:new Date().toISOString()}},{status:400});return d.NextResponse.json({success:!1,message:"댓글 삭제 중 오류가 발생했습니다",debug:{errorMessage:e.message,commentId:s.id,endpoint:"/api/comment/[id]",method:"DELETE",timestamp:new Date().toISOString()}},{status:500})}}let l=new n.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/comment/[id]/route",pathname:"/api/comment/[id]",filename:"route",bundlePath:"app/api/comment/[id]/route"},resolvedPagePath:"C:\\코딩\\p5\\forum\\app\\api\\comment\\[id]\\route.js",nextConfigOutput:"",userland:r}),{workAsyncStorage:g,workUnitAsyncStorage:x,serverHooks:w}=l;function j(){return(0,o.patchFetch)({workAsyncStorage:g,workUnitAsyncStorage:x})}},96487:()=>{},78335:()=>{},35189:(e,s,t)=>{"use strict";async function r(e){var s;let t=(s=e.headers.get("Authorization"))?s.startsWith("Bearer ")?s.substring(7):s:null;if(!t)return{isValid:!1,message:"로그인이 필요합니다"};try{let e=decodeURIComponent(escape(atob(t))),s=JSON.parse(e);if(s.expires<Date.now())return{isValid:!1,message:"세션이 만료되었습니다"};return{isValid:!0,user:s}}catch(e){return console.error("Auth validation error:",e),{isValid:!1,message:"유효하지 않은 인증 정보입니다"}}}t.d(s,{V:()=>r})},52445:(e,s,t)=>{"use strict";t.d(s,{X:()=>a});var r=t(12518);let n=process.env.MONGODB_URI;if(!process.env.MONGODB_URI)throw Error("Please add your Mongo URI to .env.local");let a=new r.MongoClient(n,{}).connect()}};var s=require("../../../../webpack-runtime.js");s.C(e);var t=e=>s(s.s=e),r=s.X(0,[638,5452],()=>t(6259));module.exports=r})();